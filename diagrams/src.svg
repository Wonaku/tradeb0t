<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="156px" preserveAspectRatio="none" style="width:480px;height:156px;" version="1.1" viewBox="0 0 480 156" width="480px" zoomAndPan="magnify"><defs><filter height="300%" id="fir85t7ysqelb" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class ITradeAlgorithm--><rect fill="#FEFECE" filter="url(#fir85t7ysqelb)" height="137.6328" id="ITradeAlgorithm" style="stroke: #A80036; stroke-width: 1.5;" width="460" x="6" y="8"/><ellipse cx="109.75" cy="24" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M105.6719,19.7656 L105.6719,17.6094 L113.0625,17.6094 L113.0625,19.7656 L110.5938,19.7656 L110.5938,27.8438 L113.0625,27.8438 L113.0625,30 L105.6719,30 L105.6719,27.8438 L108.1406,27.8438 L108.1406,19.7656 L105.6719,19.7656 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="130.25" y="28.1543">ITradeAlgorithm</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="143" x="326" y="5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="141" x="327" y="17.1387">InputsType, StateType</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="465" y1="40" y2="40"/><ellipse cx="17" cy="51.9023" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="26" y="54.2104">name: string</text><ellipse cx="17" cy="64.707" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="26" y="67.0151">description: string</text><ellipse cx="17" cy="77.5117" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="26" y="79.8198">inputs: InputTypes</text><ellipse cx="17" cy="90.3164" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="26" y="92.6245">details: Algorithm</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="465" y1="99.2188" y2="99.2188"/><ellipse cx="17" cy="111.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="434" x="26" y="113.4292">main(inputs: InputsType): Promise&lt;AlgorithmRun&lt;InputsType, StateType&gt;&gt;</text><ellipse cx="17" cy="123.9258" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="407" x="26" y="126.2339">resume(id: number): Promise&lt;AlgorithmRun&lt;InputsType, StateType&gt;&gt;</text><ellipse cx="17" cy="136.7305" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="388" x="26" y="139.0386">stop(id: number): Promise&lt;AlgorithmRun&lt;InputsType, StateType&gt;&gt;</text><!--
@startuml
interface ITradeAlgorithm<InputsType, StateType> {
    +name: string
    +description: string
    +inputs: InputTypes
    +details: Algorithm
    +main(inputs: InputsType): Promise<AlgorithmRun<InputsType, StateType>>
    +resume(id: number): Promise<AlgorithmRun<InputsType, StateType>>
    +stop(id: number): Promise<AlgorithmRun<InputsType, StateType>>
}
@enduml

PlantUML version 1.2019.06(Fri May 24 17:10:25 UTC 2019)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.21+9
Operating System: Linux
OS Version: 6.2.0-1018-azure
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>