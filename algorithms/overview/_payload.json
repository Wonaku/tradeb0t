[{"data":1,"prerenderedAt":-1},["Reactive",2],{"page-data/algorithms/overview":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"_empty":6,"title":8,"description":9,"body":10,"_type":157,"_id":158,"_source":159,"_file":160,"_extension":161,"before":162,"after":166},"/algorithms/overview","algorithms",false,"","Overview","Tradeb0t provides abstract classes for trading algorithms. It is designed to make it possible to reuse the same code for different exchanges.",{"type":11,"children":12,"toc":151},"root",[13,21,26,33,38,74,80,90,139,145],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"overview",[19],{"type":20,"value":8},"text",{"type":14,"tag":22,"props":23,"children":24},"p",{},[25],{"type":20,"value":9},{"type":14,"tag":27,"props":28,"children":30},"h2",{"id":29},"main-functionality",[31],{"type":20,"value":32},"Main functionality",{"type":14,"tag":22,"props":34,"children":35},{},[36],{"type":20,"value":37},"You just need to implement 3 main methods:",{"type":14,"tag":39,"props":40,"children":41},"ul",{},[42,54,64],{"type":14,"tag":43,"props":44,"children":45},"li",{},[46,52],{"type":14,"tag":47,"props":48,"children":49},"code-inline",{},[50],{"type":20,"value":51},"main",{"type":20,"value":53}," - main method of the algorithm. It is called every time when the algorithm is executed.",{"type":14,"tag":43,"props":55,"children":56},{},[57,62],{"type":14,"tag":47,"props":58,"children":59},{},[60],{"type":20,"value":61},"resume",{"type":20,"value":63}," - method that is called when the algorithm is resumed after the pause.",{"type":14,"tag":43,"props":65,"children":66},{},[67,72],{"type":14,"tag":47,"props":68,"children":69},{},[70],{"type":20,"value":71},"stop",{"type":20,"value":73}," - method that is called in order to stop the algorithm.",{"type":14,"tag":27,"props":75,"children":77},{"id":76},"storage-utils",[78],{"type":20,"value":79},"Storage utils",{"type":14,"tag":22,"props":81,"children":82},{},[83,88],{"type":14,"tag":47,"props":84,"children":85},{},[86],{"type":20,"value":87},"AbstractAlgorithm",{"type":20,"value":89}," class also provides the following methods for saving specific state of the algorithm to storage:",{"type":14,"tag":39,"props":91,"children":92},{},[93,109,119,129],{"type":14,"tag":43,"props":94,"children":95},{},[96,101,103,107],{"type":14,"tag":47,"props":97,"children":98},{},[99],{"type":20,"value":100},"commitStart",{"type":20,"value":102}," - saves the state of the algorithm before the ",{"type":14,"tag":47,"props":104,"children":105},{},[106],{"type":20,"value":51},{"type":20,"value":108}," method is called.",{"type":14,"tag":43,"props":110,"children":111},{},[112,117],{"type":14,"tag":47,"props":113,"children":114},{},[115],{"type":20,"value":116},"commitContinue",{"type":20,"value":118}," - saves the state of the algorithm after it is resumed.",{"type":14,"tag":43,"props":120,"children":121},{},[122,127],{"type":14,"tag":47,"props":123,"children":124},{},[125],{"type":20,"value":126},"commitFinish",{"type":20,"value":128}," - saves the state of the algorithm after it is successfully finished.",{"type":14,"tag":43,"props":130,"children":131},{},[132,137],{"type":14,"tag":47,"props":133,"children":134},{},[135],{"type":20,"value":136},"commitError",{"type":20,"value":138}," - saves the state of the algorithm after error occured.",{"type":14,"tag":27,"props":140,"children":142},{"id":141},"class-diagram",[143],{"type":20,"value":144},"Class diagram",{"type":14,"tag":146,"props":147,"children":150},"img",{"alt":148,"src":149},null,"https://www.plantuml.com/plantuml/png/fLJRQeD047tFLmpq9QNs1qGaqgPGQA4qGfydEkZ2NcHtJPE6_7jNLoKc1aBYWpepPyxEvR0BOr7RMl0PhetLc5d8E1e3IMUc6dDAUA4qiwM8NfL09e6sbcHkm9ifYOgZfG3IvJOhKHQKL2o0TrdLrgIxoaLMrW7wNrKDPWpx6RZdQTyNS029Wa9m5fF5MJ0dasbMMQRaHGnh3mvz0SqfvWpIr3qVuTf27qFuqaemGz7Gz7SjeybMulYCLfEf1SrP7eAinPhqlOJ63UjUkfmiCkxw759Q_uFf5n729rQHF-5qFnxwYpOhIRjHzHl-yHuVjerAZgEjR7Gd5y_np5LHDA2FzhiYlM4P-NoKo7T_8uQaStKSOsrrLMLA26PNZOGdTXcuuRND3SrScXxANG3k5P_mNZNwwUGN9IsJDTrCyCOaC-NDwKkjbJxA3e0QJmXju5ekWnjomCB9sep8givvmt2vmdo2yuhqmspXRXrtMVq3",[],{"title":7,"searchDepth":152,"depth":152,"links":153},2,[154,155,156],{"id":29,"depth":152,"text":32},{"id":76,"depth":152,"text":79},{"id":141,"depth":152,"text":144},"markdown","content:4.algorithms:1.overview.md","content","4.algorithms/1.overview.md","md",{"_path":163,"title":164,"description":165},"/domain","Domain model","Tradeb0t operates with specific domain model in order to provide a unified way to work with different exchanges and assets.",{"_path":167,"title":168,"description":169},"/algorithms/hammer","Hammer example","Hammer is a simple algorithm, which tries to place order first in trading day. You can see example code below."]