@startuml
abstract class AbstractInfoModule {
    #exchangeClient: AbstractExchangeClient
    +{abstract} getCurrencies(): Promise<Currency[]>
    +{abstract} getSecurityLastPrice(ticker: string): Promise<number>
    +{abstract} getSecurityCurrency(ticker: string): Promise<Currency>
    +{abstract} getSecurityName(ticker: string): Promise<string>
    +{abstract} getSecurity(ticker: string, ignoreCache: boolean): Promise<MarketInstrument | null>
    +{abstract} getSecurityByExchangeId(id: string, ignoreCache: boolean): Promise<MarketInstrument | null>
}
class InfoModule extends AbstractInfoModule {
    +getCurrencies(): Promise<Currency[]>
    +getSecurityLastPrice(ticker: string): Promise<number>
    +getSecurityCurrency(ticker: string): Promise<Currency>
    +getSecurityName(ticker: string): Promise<string>
    +getSecurity(ticker: string, ignoreCache?: boolean): Promise<MarketInstrument | null>
    +getSecurityByExchangeId(id: string, ignoreCache?: boolean): Promise<MarketInstrument | null>
}

@enduml
