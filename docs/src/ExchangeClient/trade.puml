@startuml
abstract class AbstractTradeModule {
    #exchangeClient: AbstractExchangeClient
    +{abstract} sell(__0: OrderDetails): Promise<C_Order>
    +{abstract} buy(__0: OrderDetails): Promise<C_Order>
    +{abstract} marketSell(__0: OrderDetails): Promise<C_Order>
    +{abstract} marketBuy(__0: OrderDetails): Promise<C_Order>
    +{abstract} sellOrCancel(): Promise<C_Order>
    +{abstract} buyOrCancel(): Promise<C_Order>
}

class TradeModule extends AbstractTradeModule {
    -placedMarketOrderToOrder(order: PlacedMarketOrder, figi: string, ticker: string): Promise<C_Order>
    -getFigi(ticker: string): Promise<string>
    +sell(__0: OrderDetails): Promise<C_Order>
    +buy(__0: OrderDetails): Promise<C_Order>
    +marketSell(__0: OrderDetails): Promise<C_Order>
    +marketBuy(__0: OrderDetails): Promise<C_Order>
    +sellOrCancel(): Promise<C_Order>
    +buyOrCancel(): Promise<C_Order>
    -{static} placedLimitOrderToOrder(order: PlacedLimitOrder, figi: string, price: number): C_Order
}
@enduml
